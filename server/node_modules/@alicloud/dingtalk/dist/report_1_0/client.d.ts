/**
 *
 */
import * as $Util from '@alicloud/tea-util';
import SPI from '@alicloud/gateway-spi';
import OpenApi, * as $OpenApi from '@alicloud/openapi-client';
import * as $tea from '@alicloud/tea-typescript';
export declare class CreateTemplatesHeaders extends $tea.Model {
    commonHeaders?: {
        [key: string]: string;
    };
    xAcsDingtalkAccessToken?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplatesRequest extends $tea.Model {
    allowAddReceivers?: boolean;
    allowEdit?: boolean;
    allowGetLocation?: boolean;
    authDeptIds?: string[];
    authUserIds?: string[];
    creator?: string;
    defaultReceivedCids?: string[];
    defaultReceivedMasterLevels?: string[];
    defaultReceivers?: string[];
    fields?: CreateTemplatesRequestFields[];
    logo?: string;
    maxWordCount?: number;
    minWordCount?: number;
    name?: string;
    templateManagers?: string[];
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplatesResponseBody extends $tea.Model {
    templateId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplatesResponse extends $tea.Model {
    headers: {
        [key: string]: string;
    };
    statusCode: number;
    body: CreateTemplatesResponseBody;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplatesRequestFieldsDataValueOpenInfo extends $tea.Model {
    attribute?: {
        [key: string]: string;
    };
    openId?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplatesRequestFieldsDataValue extends $tea.Model {
    openInfo?: CreateTemplatesRequestFieldsDataValueOpenInfo;
    options?: string[];
    placeholder?: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class CreateTemplatesRequestFields extends $tea.Model {
    dataType?: number;
    dataValue?: CreateTemplatesRequestFieldsDataValue;
    fieldName?: string;
    need?: boolean;
    order?: number;
    sort?: number;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client extends OpenApi {
    _client: SPI;
    constructor(config: $OpenApi.Config);
    createTemplatesWithOptions(request: CreateTemplatesRequest, headers: CreateTemplatesHeaders, runtime: $Util.RuntimeOptions): Promise<CreateTemplatesResponse>;
    createTemplates(request: CreateTemplatesRequest): Promise<CreateTemplatesResponse>;
}
